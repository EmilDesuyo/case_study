@model PurchaseOrderViewModel

@{
    ViewData["Title"] = "Create Purchase Order";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Create Purchase Order</h6>
    </div>
    <div class="card-body">
        <form asp-action="Create" id="po-form">
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="SupplierId" class="form-label"></label>
                    <select asp-for="SupplierId" class="form-control"
                            asp-items="@(new SelectList(Model.Suppliers, "Id", "Name"))">
                        <option value="">-- Select Supplier --</option>
                    </select>
                    <span asp-validation-for="SupplierId" class="text-danger"></span>
                </div>
            </div>

            <h5>Order Items</h5>
            <div id="items-container">
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    <div class="item-row row mb-3">
                        <div class="col-md-5">
                            <select asp-for="@Model.Items[i].ProductId" class="form-control product-select"
                                    asp-items="@(new SelectList(Model.Products, "ItemCode", "Name"))">
                                <option value="">-- Select Product --</option>
                            </select>
                            <span asp-validation-for="@Model.Items[i].ProductId" class="text-danger"></span>
                        </div>
                        <div class="col-md-2">
                            <input asp-for="@Model.Items[i].Quantity" class="form-control" placeholder="Qty" />
                            <span asp-validation-for="@Model.Items[i].Quantity" class="text-danger"></span>
                        </div>
                        <div class="col-md-3">
                            <input asp-for="@Model.Items[i].UnitPrice" class="form-control" placeholder="Price" />
                            <span asp-validation-for="@Model.Items[i].UnitPrice" class="text-danger"></span>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-danger remove-item">
                                <i class="bi bi-trash"></i> Remove
                            </button>
                        </div>
                    </div>
                }
            </div>

            <button type="button" id="add-item" class="btn btn-secondary mb-3">
                <i class="bi bi-plus-circle"></i> Add Item
            </button>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Create Order
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to List
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // Add new item row
            $("#add-item").click(function() {
                var index = $("#items-container .item-row").length;
                var newRow = `
                    <div class="item-row row mb-3">
                        <div class="col-md-5">
                            <select name="Items[${index}].ProductId" class="form-control product-select">
                                <option value="">-- Select Product --</option>
        @foreach (var product in Model.Products)
        {
                                        <option value="@product.ItemCode">@product.Name</option>
        }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <input name="Items[${index}].Quantity" class="form-control" placeholder="Qty" value="1" />
                        </div>
                        <div class="col-md-3">
                            <input name="Items[${index}].UnitPrice" class="form-control" placeholder="Price" />
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-danger remove-item">
                                <i class="bi bi-trash"></i> Remove
                            </button>
                        </div>
                    </div>`;
                $("#items-container").append(newRow);
            });

            // Remove item row
            $(document).on("click", ".remove-item", function() {
                $(this).closest(".item-row").remove();
                // Reindex remaining items
                $("#items-container .item-row").each(function(index) {
                    $(this).find("select").attr("name", `Items[${index}].ProductId`);
                    $(this).find("input").first().attr("name", `Items[${index}].Quantity`);
                    $(this).find("input").last().attr("name", `Items[${index}].UnitPrice`);
                });
            });

            // Set price when product is selected
            $(document).on("change", ".product-select", function() {
                var productId = $(this).val();
                if (productId) {
                    var priceInput = $(this).closest(".item-row").find("input[name$='UnitPrice']");
                    // In a real app, you might fetch the price via AJAX
                    // For now, we'll just set a placeholder
                    priceInput.val("0.00");
                }
            });
        });
    </script>
}